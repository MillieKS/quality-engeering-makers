// Generated by Selenium IDE
import org.junit.jupiter.api.*;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import static org.junit.jupiter.api.Assertions.*;
import java.time.Duration;
import java.util.List;


public class TodoReactTest {
  private static WebDriver driver;


  @BeforeAll
  static void setUp() {
    driver = new ChromeDriver();

  }
  @AfterAll
  static void tearDown() {
    driver.quit();
  }

  @Test
  public void todoReact() throws InterruptedException {
    driver.get("https://todomvc.com/examples/react/#/");
    driver.manage().window().setSize(new Dimension(1200, 900));
    // Add an assertion which checks the title of the page is "React • TodoMVC".
    assertEquals("React • TodoMVC", driver.getTitle());

    driver.findElement(By.cssSelector(".new-todo")).click();
    driver.findElement(By.cssSelector(".new-todo")).sendKeys("My first task");
    driver.findElement(By.cssSelector(".new-todo")).sendKeys(Keys.ENTER);
    // Assert that the new item has been added to the list of to-do items.
    // WebElement todoItem = driver.findElement(By.xpath("//label[text()='My first task']"));
    WebElement todoItem = driver.findElement(By.cssSelector(".view label"));
    assertTrue(todoItem.isDisplayed());
    driver.findElement(By.cssSelector(".new-todo")).sendKeys("My second task");
    driver.findElement(By.cssSelector(".new-todo")).sendKeys(Keys.ENTER);
    driver.findElement(By.cssSelector("li:nth-child(1) .toggle")).click();
    driver.findElement(By.cssSelector("li:nth-child(2) .toggle")).click();
    // Conditions!
    // Perform the hover action
    Actions actions = new Actions(driver);
    WebElement todo2 = new WebDriverWait(driver, Duration.ofSeconds(10))
            .until(ExpectedConditions.elementToBeClickable(By.cssSelector(".completed:nth-child(2) .destroy")));
    todo2.click();

    // Assert that there is a message "1 item left" at the bottom of the list.
    WebElement todoCount = driver.findElement(By.cssSelector(("span.todo-count")));
    assertEquals("0 items left", todoCount.getText());

    Thread.sleep(5000);
//    WebElement todo1 = new WebDriverWait(driver, Duration.ofSeconds(10))
//            .until(ExpectedConditions.elementToBeClickable(By.cssSelector(".completed:nth-child(1) .destroy")));
//    actions.moveToElement(todo1).perform();
    driver.findElement(By.cssSelector(".destroy")).click();


  }
}
